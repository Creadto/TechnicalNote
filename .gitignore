# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## User settings
xcuserdata/

## compatibility with Xcode 8 and earlier (ignoring not required starting Xcode 9)
*.xcscmblueprint
*.xccheckout

## compatibility with Xcode 3 and earlier (ignoring not required starting Xcode 4)
build/
DerivedData/
*.moved-aside
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3

## Obj-C/Swift specific
*.hmap

## App packaging
*.ipa
*.dSYM.zip
*.dSYM

## Playgrounds
timeline.xctimeline
playground.xcworkspace

# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
# Package.pins
# Package.resolved
# *.xcodeproj
#
# Xcode automatically generates this directory with a .xcworkspacedata file and xcuserdata
# hence it is not needed unless you have added a package configuration file to your project
# .swiftpm

.build/

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
# Pods/
#
# Add this line if you want to avoid checking in source code from the Xcode workspace
# *.xcworkspace

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts

Carthage/Build/

# Accio dependency management
Dependencies/
.accio/

# fastlane
#
# It is recommended to not store the screenshots in the git repo.
# Instead, use fastlane to re-generate the screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/#source-control

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots/**/*.png
fastlane/test_output

# Code Injection
#
# After new code Injection tools there's a generated folder /iOSInjectionProject
# https://github.com/johnno1962/injectionforxcode

iOSInjectionProject/
MeshProcessor/util
MeshProcessor/models/vposer/snapshots
MeshProcessor/models
MeshProcessor/models/vposer
MeshProcessor/models/homogenus/trained_models
MeshProcessor/models/homogenus
Python/Open3D
MeshProcessor/proc
Python
MeshProcessor
MeshProcessor/proc/__pycache__
Python/Open3D/samples
MeshProcessor/models/homogenus/trained_models/tf
MeshProcessor/models/mano
MeshProcessor/models/smplx
MeshProcessor/serve/__pycache__
MeshProcessor/util/__pycache__
MeshProcessor/serve
MeshProcessor/models/homogenus/trained_models/tf/checkpoint
MeshProcessor/models/homogenus/trained_models/tf/TR02_E02_It_002010.ckpt.data-00000-of-00001
MeshProcessor/models/homogenus/trained_models/tf/TR02_E02_It_002010.ckpt.index
MeshProcessor/models/homogenus/trained_models/tf/TR02_E02_It_002010.ckpt.meta
MeshProcessor/models/homogenus/trained_models/tf/version.txt
MeshProcessor/models/mano/MANO_LEFT.pkl
MeshProcessor/models/mano/MANO_RIGHT.pkl
MeshProcessor/models/smplx/SMPLX_FEMALE.npz
MeshProcessor/models/smplx/SMPLX_FEMALE.pkl
MeshProcessor/models/smplx/SMPLX_MALE.npz
MeshProcessor/models/smplx/SMPLX_MALE.pkl
MeshProcessor/models/smplx/SMPLX_NEUTRAL.npz
MeshProcessor/models/smplx/SMPLX_NEUTRAL.pkl
MeshProcessor/models/vposer/snapshots/TR00_E096.pt
MeshProcessor/models/vposer/TR00_004_00_WO_accad.ini
MeshProcessor/models/vposer/version.txt
MeshProcessor/models/vposer/vposer_smpl.py
MeshProcessor/proc/__pycache__/meshing.cpython-38.pyc
MeshProcessor/serve/__pycache__/http_server.cpython-38.pyc
MeshProcessor/util/__pycache__/comm_manager.cpython-38.pyc
MeshProcessor/util/__pycache__/files.cpython-38.pyc
MeshProcessor/util/__pycache__/yaml_config.cpython-38.pyc
MeshProcessor/Measure.yaml
Python/Open3D/samples/DepthCamera_2022-11-16-22-21-23.json
Python/Open3D/samples/DepthCapture_2022-11-16-22-21-23.png
